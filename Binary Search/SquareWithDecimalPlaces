#include<iostream>
using namespace std;

double SqRoot(int n)
{

    double ans = floorSqrt(n);
    int i = 1,precision=5; 
    double sq = ans * ans;
    for (int j = 1;j<=precision;j++){
        while (sq <= n)
        {
            ans += 1/(pow(10,j));
            sq = ans * ans;
          }
        ans -= 1 / pow(10, j);
        sq = ans * ans;
    }
return ans;
}


int floorSqrt(int n)
{
    int s = 0, e = n, ans = 0;
    while (s <= e)
    {
        int mid = s + (e - s) / 2;
        if (mid * mid > n)
        {
            e = mid - 1;
        }
        else
        {
            ans = mid;
            s = mid + 1;
        }
    }
    cout << "Floor Sqaure " << ans << endl;

    return ans;
}


//We can also find exact square as follows:

double PreciseSquare(int tempSolution,int precision){
double ans=tempSolution;
double factor=1;
for(int i=0; i<precision; i++){
factor=factor/10;

for(double j=ans;j*j<=n;j=j+factor){//j*j<n is also applicable
ans=j;//Condition ke baad check kar rhe toh subtraction ki jarurat nahi 
}
}

return ans;


int main(){
    int n;
    cout << "Enter Number : ";
    cin >> n;
    cout << "\nSquare Root of " << n << " is: " << SqRoot(n);

    return 0;
}
